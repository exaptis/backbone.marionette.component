<h2 class="page-headline">CollectionView Component</h2>
<p>
    As the <code>Backbone:marionette.Component.ItemView</code>'s interface is fully compatible with the <code>Backbone.Marionette.ItemView</code>,
    there is no  there are no further adjustments necessary in order to use it with the <code>Backbone.Marionette.CollectionView</code>.
</p>

<div class="panel panel-material-purple">
    <div class="panel-heading">
        <div class="panel-title">Example</div>
    </div>
    <div class="panel-body">
        <form>
            <fieldset>
                <legend>Example</legend>
                <div id="content"></div>
            </fieldset>
        </form>
    </div>
</div>

<!-- @formatter:off -->
<div class="panel panel-code panel-material-purple">
    <div class="panel-heading">
        <div class="panel-title">Code</div>
    </div>
    <div class="panel-body">
<pre>
<code class="language-coffeescript">
    class TextFieldItemView extends Backbone.Marionette.Component.ItemView
        initialize: ->
            @add new TextField 'textfield', 'name', @model

    class TextFieldCollectionView extends Backbone.Marionette.CollectionView
        childView: TextFieldItemView

    do ->
        # Initialize collection and collection view
        collection = new Backbone.Collection [
            { id:1, name: 'David' }
            { id:2, name: 'Thomas' }
            { id:3, name: 'Markus' }
        ]

        view = new TextFieldCollectionView collection: collection
        view.render()
</code>
</pre>
    </div>
</div>

<div class="panel panel-code panel-material-purple">
    <div class="panel-heading">
        <div class="panel-title">Markup</div>
    </div>
    <div class="panel-body">
<pre>
<code class="language-markup">
    &lt;input class=&quot;form-control&quot; component-id=&quot;textfield&quot; placeholder=&quot;Name&quot;&gt;
</code>
</pre>
    </div>
</div>
<!-- @formatter:on -->
