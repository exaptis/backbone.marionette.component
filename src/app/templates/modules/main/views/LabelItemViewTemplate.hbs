<h2 class="page-headline">Label Component</h2>
<p>
    The <code>Label</code> component can be used to display a models value.
    It creates a one-way data binding between the model and the component.
    To connect the component with the markup its <code>component-id</code> has to be set on an according HTML tag.
    <br /><br />
    Usage: <code> new Label(componentId, modelProperty, model) </code>
    <ul>
        <li>
            The 1st parameter is the the component identifier.
        </li>
        <li>
            The 2nd parameter is the key of the model property it should be bound to.
        </li>
        <li>
            The 3rd parameter is the model bound to the component
        </li>
    </ul>
</p>

<div class="panel panel-material-purple">
    <div class="panel-heading">
        <div class="panel-title">Example</div>
    </div>
    <div class="panel-body">
        <form>
            <legend>Example</legend>
            <p>
                <span component-id="message1"></span>
            </p>

            <p>
                <span component-id="message2"></span>
            </p>
        </form>
    </div>
</div>

<!-- @formatter:off -->
<div class="panel panel-code panel-material-purple">
    <div class="panel-heading">
        <div class="panel-title">Code</div>
    </div>
    <div class="panel-body">
<pre>
<code class="language-coffeescript">
  class LabelItemView extends Backbone.Marionette.Component.ItemView

    initialize: ->
        @add(new Label("message1", "Hello World"))
        @add(new Label("message2", "message", new Backbone.Model(message: "Hi Human!")))
</code>
</pre>
    </div>
</div>

<div class="panel panel-code panel-material-purple">
    <div class="panel-heading">
        <div class="panel-title">Markup</div>
    </div>
    <div class="panel-body">
<pre>
<code class="language-markup">
    &lt;span component-id=&quot;message1&quot;&gt;&lt;/span&gt;
    &lt;span component-id=&quot;message2&quot;&gt;&lt;/span&gt;
</code>
</pre>
    </div>
</div>
<!-- @formatter:on -->
